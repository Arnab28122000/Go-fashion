{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH__COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH__COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH__COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapShotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => {\n      dispatch(fetchCollectionsFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/React/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapShotToMap","fetchCollectionsStart","type","FETCH__COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH__COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH__COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAM;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,0BADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAN,CAA7C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,0BAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACnC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAI;AACdP,MAAAA,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAR;AACH,KALD;AAMH,GAVD;AAWH,CAZM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FETCH__COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionSuccess = collectionsMap =>  ({\r\n    type: ShopActionTypes.FETCH__COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FETCH__COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection(\"collections\");\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get().then((snapshot) => {\r\n            const collectionsMap = convertCollectionsSnapShotToMap(snapshot);\r\n            dispatch(fetchCollectionSuccess(collectionsMap));\r\n        }).catch(error => {\r\n            dispatch(fetchCollectionsFailure(error.message));\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}